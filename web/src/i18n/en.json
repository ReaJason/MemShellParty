{
  "basicInfo": {
    "classInfo": "ShellClass",
    "serverInfo": "TargetServer",
    "toolInfo": "ShellTool"
  },
  "buttons": {
    "generate": "Generate Shell"
  },
  "cancel": "Cancel",
  "configs": {
    "main-config": "Main Config",
    "package-config": "Package Config"
  },
  "copyLabelSuccess": "Copy {{label}} successfully",
  "copySuccess": "Copy successfully",
  "download": "Downlaod",
  "errors": {
    "generationFailed": "Generation failed, {{error}}"
  },
  "feedback": "Feedback",
  "generateResult": {
    "basicInfo": "Basic Info",
    "title1": "Generate Result",
    "title2": "Shell Class",
    "title3": "Injector Class",
    "usage": "Usage"
  },
  "loading": "Loading...",
  "mainConfig": {
    "bypassJavaModule": "Bypass Java Module",
    "debug": "Debug Mode",
    "injectorClassName": "Injector ClassName",
    "jre": "Target JRE Version",
    "server": "Target Server",
    "shellClassName": "Shell ClassName",
    "shellMountType": "Shell Mount Type",
    "shellTool": "Shell Tool",
    "shrink": "Shrink Bytecode",
    "urlPattern": "URL Pattern"
  },
  "optional": "(Optional)",
  "packageConfig": {
    "packer": {
      "AgentJar": "AgentJar",
      "Aviator": "Aviator",
      "BCEL": "BCEL",
      "Base64": "Base64",
      "BeanShell": "BeanShell",
      "EL": "EL",
      "Freemarker": "Freemarker",
      "Groovy": "Groovy",
      "GzipBase64": "GzipBase64",
      "Hessian2Deserialize": "Hessian2Deserialize",
      "HessianDeserialize": "HessianDeserialize",
      "JEXL": "JEXL",
      "JSP": "JSP",
      "JXPath": "JXPath",
      "Jar": "Jar",
      "JavaDeserialize": "JavaDeserialize",
      "JinJava": "JinJava",
      "MVEL": "MVEL",
      "OGNL": "OGNL",
      "Rhino": "Rhino",
      "ScriptEngine": "ScriptEngine",
      "SpEL": "SpEL",
      "Velocity": "Velocity",
      "XxlJob": "XXL-JOB Executor",
      "AgentJarWithJDKAttacher": "AgentJarWithJDKAttacher",
      "AgentJarWithJREAttacher": "AgentJarWithJREAttacher"
    },
    "title": "Package Method"
  },
  "placeholders": {
    "input": "Please input",
    "select": "Please select"
  },
  "quickUsage": {
    "step1": "Select Target Server",
    "step2": "Select Shell Tool, Godzilla, Behinder, etc.",
    "step3": "Select Shell Mount Type, Filter, Listener, etc.",
    "step4": "Select Packing Method",
    "step5": "Click Generate Shell",
    "title": "Quick Usage"
  },
  "shellNotWork": {
    "step1": "1. Try to enable the debug mode, regenerate the memory shell and inject it, check the console or log",
    "step2": "2. If an exception stack trace is displayed, or no exception is seen, please take a screenshot of the current generation interface and the exception log, and describe the target environment as much as possible for feedback",
    "title": "Shell Not Work ?"
  },
  "shellToolConfig": {
    "antSwordPass": "Shell pwd",
    "behinder": "Behinder",
    "behinderDefaultEncryptType": "Default",
    "behinderEncryptType": "Encrypt Type",
    "behinderPass": "Pass",
    "behinderScriptType": "Script Type",
    "command": "Command",
    "customHeader": "Custom Header",
    "godzilla": "Godzilla",
    "godzillaEncryptor": "Encryptor",
    "godzillaHeader": "Request Config -> Request Header",
    "godzillaPayload": "Payload",
    "headerName": "Header Name",
    "headerValue": "Header Value",
    "httpHeader": "HTTP -> HTTP HEADERS",
    "key": "Key",
    "neoreGeorgHeader": "Custom Header",
    "neoreGeorgKey": "Connection Key",
    "paramName": "Param Name",
    "pass": "Pass",
    "suo5Header": "AdvanceConfiguration -> Request Header",
    "base64String": "Shell Class",
    "encryptor": "Encryptor",
    "implementationClass": "ImplementationClass"
  },
  "success": {
    "generated": "Generation successful"
  },
  "tips": {
    "controllerUrlPattern": "ControllerHandler type requires a specific URL Pattern, e.g., /hello_controller",
    "decompileTip": "Decompilation is still under development, so the current only sees the base64 encoding format",
    "download-jattach": "Download the Jattach tool",
    "execute-command": "Execute the command to inject: /path/to/jattach pid load instrument false /path/to/agent.jar",
    "execute-command1": "Execute the command to inject: java -jar /path/to/agent.jar pid",
    "get-pid": "Get the process pid of the target jvm (use jps or ps)",
    "handlerUrlPattern": "HandlerMethod/HandlerFunction type requires a specific URL Pattern, e.g., /hello_handler",
    "jreTip": "Target JRE version, generally speaking, Java 6 is the default version for maximum compatibility, and Java high versions can load low version bytecode.",
    "jreTip2": "In specific cases, such as JDK8 being able to use lambda expressions, and JDK9 and above having module restrictions, a specific version is required.",
    "agent-move-to-target": "Move MemShellAgent.jar and jattach to target host",
    "agent-move-to-target1": "Move MemShellAgent.jar to target host",
    "servletUrlPattern": "Servlet type requires a specific URL Pattern, e.g., /hello_servlet",
    "shellBytesEmpty": "Shell bytes is empty, please generate shell first",
    "shellToolNotSelected": "Please select a shell tool type first",
    "targetServerNotFound": "Target server not found?",
    "targetServerRequest": "Request",
    "try-to-use-shell": "Try to use the memory shell",
    "waitingForGeneration": "// Waiting for generation...",
    "customShellClass": "Custom shell class is required, base64 or classfile"
  },
  "version": {
    "updateAvailable": "Update Available",
    "updateAvailableTooltip": "Click to Open Github Release Page ( v{{currentVersion}} -> v{{latestVersion}})"
  },
  "generator": "Generator",
  "about": "About"
}
